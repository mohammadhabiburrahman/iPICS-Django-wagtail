"""
Django settings for ipics project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from datetime import timedelta
from pickle import TRUE

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/


# Application definition

# CORS Allow app:
CORS_ORIGIN_ALLOW_ALL = True

# CORS_ORIGIN_WHITELIST = (
#   'https://apiipics.inneedcloud.com', 'http://apiipics.inneedcloud.com'
# )


# ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = ['44.207.172.150','0.0.0.0','stgapi.inneedcloud.com','127.0.0.1','testapi.inneedcloud.com', 'demoapplb-946665656.us-east-1.elb.amazonaws.com', 'localhost','localhost:8000'] 
CSRF_TRUSTED_ORIGINS = ['https://44.207.172.150','http://44.207.172.150','https://stgapi.inneedcloud.com','http://stgapi.inneedcloud.com','https://*.127.0.0.1','http://*.inneedcloud.com','https://0.0.0.0','https://44.207.172.150','http://44.207.172.150','https://3.224.227.254','http://3.224.227.254', 'https://apiipics.inneedcloud.com','http://apiipics.inneedcloud.com','https://testapi.inneedcloud.com','http://testapi.inneedcloud.com']


# ALLOWED_HOSTS = ['44.207.172.150','0.0.0.0','stgapi.inneedcloud.com'] 
# CSRF_TRUSTED_ORIGINS = ['https://*.inneedcloud.com','https://*.127.0.0.1','https://44.207.172.150','http://44.207.172.150','https://stgapi.inneedcloud.com','http://stgapi.inneedcloud.com']




INSTALLED_APPS = [
    'home',
    'search',
    'ipicsAPI',
    'ipics',
    'wagtailmedia',
    'corsheaders',
    'wagtail.contrib.modeladmin',


    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',

    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',

    'modelcluster',
    'taggit',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'wagtail.api.v2',
    # 'ipicsAPI.apps.IpicsapiConfig',
    'django.contrib.sites',
    'storages',
    'django_filters',
    # 'djangorestframework-filters',
    'rest_framework_swagger',
    'sslserver',
    'drf_yasg',
    # 'rest_framework_simplejwt',
    # 'rest_framework_simplejwt.token_blacklist',
    'smart_selects',
    'ckeditor_uploader',
    'ckeditor',


]

MIDDLEWARE = [
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    
    'whitenoise.middleware.WhiteNoiseMiddleware',    

    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'ipics.urls'

# SECURE_SSL_REDIRECT = True
# SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
# SECURE_HSTS_SECONDS = 31536000

# CSRF_TRUSTED_ORIGINS=['https://*.inneedcloud.com', 'https://apiipics.inneedcloud.com']
# https://apiipics.inneedcloud.com/admin/login/
# CSRF_COOKIE_DOMAIN = 'https://127.0.0.1/'

#  'https://127.0.0.1', 'https://0.0.0.0'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ipics.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'iPICS_Backup_DB',
        'USER': 'root',
        'PASSWORD': 'Password123#@!',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# ]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static'),
]

# ManifestStaticFilesStorage is recommended in production, to prevent outdated
# JavaScript / CSS assets being served from cache (e.g. after a Wagtail upgrade).
# See https://docs.djangoproject.com/en/3.2/ref/contrib/staticfiles/#manifeststaticfilesstorage
# STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATIC_URL = '/static/'

# # MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_URL = '/media/'


STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'




# Wagtail settings

WAGTAIL_SITE_NAME = "ipics"

# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash

# BASE_URL = 'http://example.com'
SITE_ID = 1


TAGGIT_CASE_INSENSITIVE = True
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


WAGTAILAPI_SEARCH_ENABLED = True
WAGTAILAPI_LIMIT_MAX = 20


# AWS_ACCESS_KEY_ID = 'AKIA6CBDUI6DFAZMUWWF'
AWS_ACCESS_KEY_ID = 'AKIA34LJH7OPJK7E5NFR'

# AWS_SECRET_ACCESS_KEY = '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'
AWS_SECRET_ACCESS_KEY = 'r/oMm/PkQ/J1FXoSpCwQxvKAB31eZi3aK1TWiiHN'

# AWS_STORAGE_BUCKET_NAME = 'ipics-object-data-bucket-stg'
AWS_STORAGE_BUCKET_NAME = 'ipics-django-data-bucket'

AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_REGION_NAME = 'us-east-1'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_VERIFY = True
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
MEDIA_URL = "https://%s/" % AWS_S3_CUSTOM_DOMAIN

MEDIAFILES_LOCATION = 'media'
DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'
AWS_S3_USE_SSL = True
AWS_LOCATION = "https://%s/" % AWS_S3_CUSTOM_DOMAIN


CKEDITOR_UPLOAD_PATH = "uploads/"
AWS_DEFAULT_ACL = 'public-read'
CKEDITOR_UPLOAD_PREFIX = True
CKEDITOR_UPLOAD_PREFIX = "https://ipics-object-data-bucket.s3.amazonaws.com/media/ckuploads/"

# CKEDITOR_BROWSE_SHOW_DIRS = False
# CKEDITOR_ALLOW_NONIMAGE_FILES = False
# CKEDITOR_SLUGIFY_FILENAME = False
# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'Full',
#         'height': 400,
#         'width': 1030,
#         'toolbar_Basic': [
#             ['Source', '-', 'Bold', 'Italic']
#         ],
#         'toolbar_YourCustomToolbarConfig': [
#                {'name': 'styles', 'items': [
#                    'Styles', 'Format', 'Font', 'FontSize']},
#         ]
#     },
# }


CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        'height': 400,
        'width': 1030,
        # 'skin': 'office2013',
        'removeDialogTabs': 'image:advanced',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            # {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            # {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            # {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            # {'name': 'forms',
            #  'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
            #            'HiddenField']},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike']}, ##, 'Subscript', 'Superscript', '-', 'RemoveFormat'
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', 
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'
                       ]},  ## 'Language'  'CreateDiv', '-', 'Blockquote', '-',  '-', 'BidiLtr', 'BidiRtl'
            {'name': 'links', 'items': ['Link']}, ##, 'Unlink', 'Anchor', 'Link'
            {'name': 'insert',
             'items': ['Image', 'Table']}, ## 'Flash', 'HorizontalRule', 'SpecialChar', 'Smiley',  'PageBreak', 'Iframe'
            '/',
            {'name': 'styles', 'items': [
                'Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            # {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            # {'name': 'about', 'items': ['About']},
            # '/',  # put this to force next toolbar on new line
            # {'name': 'yourcustomtools', 'items': [
            #     # put the name of your editor.ui.addButton here
            #     'Preview',
            #     'Maximize',

            # ]},
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # 'height': 291,
        # 'width': '100%',
        # 'filebrowserWindowHeight': 725,
        # 'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage',  # the upload image feature
            # your extra plugins here
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            # 'devtools',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    }
}


# Gloabal setup for all viewset
# REST_FRAMEWORK = {
#     'DEFAULT_FILTER_BACKENDS':
#     ['django_filters.rest_framework.DjangoFilterBackend']
# }


AWS_S3_OBJECT_PARAMETERS = {
    'Expires': 'Thu, 31 Dec 2099 20:00:00 GMT',
    'CacheControl': 'max-age=94608000',
}
# To store static file into aws s3

# STATICFILES_LOCATION = 'static'
# STATICFILES_STORAGE = 'custom_storages.StaticStorage'


# SWAGGER_SETTINGS ={
#     'SECURITY_DEFINITIONS': {
#         "Auth Token eg [Bearer (JWT)]": {
#             "type": "apiKey",
#             "name": "Authorization",
#             "in": "header",
#         }
#     }
# }


# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     )
# }

# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(days=10),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': False,
#     'UPDATE_LAST_LOGIN': False,

#     'ALGORITHM': 'HS256',
#     # 'SIGNING_KEY': SECRET_KEY,
#     'VERIFYING_KEY': None,
#     'AUDIENCE': None,
#     'ISSUER': None,
#     'JWK_URL': None,
#     'LEEWAY': 0,

#     'AUTH_HEADER_TYPES': ('Bearer',),
#     'AUTH_HEADER_NAME': 'AUTHORIZATION',
#     'USER_ID_FIELD': 'id',
#     'USER_ID_CLAIM': 'user_id',
#     'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

#     'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#     'TOKEN_TYPE_CLAIM': 'token_type',
#     'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

#     'JTI_CLAIM': 'jti',

#     'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
#     # 'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
#     # 'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
# }

QUERY_URL = True
DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000
FILE_UPLOAD_MAX_MEMORY_SIZE = 524288000
